(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{554:function(t,v,e){"use strict";e.r(v);var _=e(11),r=Object(_.a)({},(function(){var t=this,v=t.$createElement,e=t._self._c||v;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("ul",[e("li",[t._v("个人的一个 Swiper 全属性集\n")])]),t._v(" "),e("h1",{attrs:{id:"swiper-运作原理"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swiper-运作原理"}},[t._v("#")]),t._v(" Swiper 运作原理")]),t._v(" "),e("p",[t._v("Swiper运作原理\nSwiper常用运作方式有两种：手动触摸切换或者导航切换（前进后退按钮，键盘控制，分页器，内置方法slideTo等）")]),t._v(" "),e("ol",[e("li",[t._v("手动触摸切换拖动阶段Swiper根据手势位置实时设定wrapper的位移（setTranslate），释放拖动时Swiper会设定一次wrapper自由过渡（setTranslate、setTransition、transitionStart、slideChangeTransitionStart）。速度为speed直到过渡结束（transitionEnd、slideChangeTransitionEnd）。")]),t._v(" "),e("li",[t._v("导航切换可参考手动触摸释放阶段")])]),t._v(" "),e("h1",{attrs:{id:"layout-布局"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#layout-布局"}},[t._v("#")]),t._v(" Layout 布局")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('\x3c!-- Slider main container --\x3e\n<div class="swiper-container">\n    \x3c!-- Additional required wrapper --\x3e\n    <div class="swiper-wrapper">\n        \x3c!-- Slides --\x3e\n        <div class="swiper-slide">Slide 1</div>\n        <div class="swiper-slide">Slide 2</div>\n        <div class="swiper-slide">Slide 3</div>\n        ...\n    </div>\n    \x3c!-- If we need pagination --\x3e\n    <div class="swiper-pagination"></div>\n\n    \x3c!-- If we need navigation buttons --\x3e\n    <div class="swiper-button-prev"></div>\n    <div class="swiper-button-next"></div>\n\n    \x3c!-- If we need scrollbar --\x3e\n    <div class="swiper-scrollbar"></div>\n</div>\n')])])]),e("h1",{attrs:{id:"初始化-swiper"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#初始化-swiper"}},[t._v("#")]),t._v(" 初始化 Swiper")]),t._v(" "),e("p",[t._v("new Swiper(swiperContainer, parameters)")]),t._v(" "),e("ul",[e("li",[t._v("swiperContainer: {HTMLElement|String} HTMLElement 或者 字符串（CSS选择器）")]),t._v(" "),e("li",[t._v("parameters: {Object} swiper的配置参数")])]),t._v(" "),e("h1",{attrs:{id:"swiper-参数-parameters"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#swiper-参数-parameters"}},[t._v("#")]),t._v(" Swiper 参数 (parameters)")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认值")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("init")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("Swiper 是否自动初始化。如果填false，则你需要手动调用 "),e("em",[t._v("mySwiper.init()")])])]),t._v(" "),e("tr",[e("td",[t._v("initialSlide")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("设定初始化时slide的索引")])]),t._v(" "),e("tr",[e("td",[t._v("direction")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'horizontal'")]),t._v(" "),e("td",[t._v("Slides的滑动方向，可选值为'horizontal'（水平），'vertical'（垂直）")])]),t._v(" "),e("tr",[e("td",[t._v("speed")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("300")]),t._v(" "),e("td",[t._v("切换速度，即slider自动滑动开始到结束的时间（单位ms），也是触摸滑动时释放至贴合的时间")])]),t._v(" "),e("tr",[e("td",[t._v("setWrapperSize")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启这个设定会在Wrapper上添加等于slides相加的宽或高，在对flexbox布局的支持不是很好的浏览器中可能需要用到")])]),t._v(" "),e("tr",[e("td",[t._v("virtualTranslate")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("虚拟位移。当你启用这个参数，Swiper除了不会移动外其他的都像平时一样运行，"),e("br"),t._v("仅仅是不会在Wrapper上设置位移。"),e("br"),t._v("当你想自定义一些slide切换效果时可以用")])]),t._v(" "),e("tr",[e("td",[t._v("width")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("强制Swiper的宽度(px)，当你的Swiper在隐藏状态下初始化时有效。这个参数会使自适应失效")])]),t._v(" "),e("tr",[e("td",[t._v("height")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("强制Swiper的高度(px)，当你的Swiper在隐藏状态下初始化时有效。这个参数会使自适应失效")])]),t._v(" "),e("tr",[e("td",[t._v("autoHeight")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("自动高度。设置为true时，wrapper和container会随着当前slide的高度而发生变化")])]),t._v(" "),e("tr",[e("td",[t._v("roundLengths")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("如果设置为true，则将slide的宽和高取整(四舍五入)，"),e("br"),t._v("以防止某些分辨率的屏幕上文字或边界(border)模糊")])]),t._v(" "),e("tr",[e("td",[t._v("nested")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("嵌套相同方向的swiper时，当切换到子swiper时停止父swiper的切换")])]),t._v(" "),e("tr",[e("td",[t._v("uniqueNavElements")]),t._v(" "),e("td",[t._v("booean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("独立分页元素，当启用（默认）并且分页元素的传入值为字符串时，swiper会优先查找子元素匹配这些元素。"),e("br"),t._v("可应用于分页器，按钮和滚动条（pagination, prev/next buttons and scrollbar elements）")])]),t._v(" "),e("tr",[e("td",[t._v("effect")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'slide'")]),t._v(" "),e("td",[t._v("独立分页元素，当启用（默认）并且分页元素的传入值为字符串时，swiper会优先查找子元素匹配这些元素。"),e("br"),t._v("可应用于分页器，按钮和滚动条（pagination, prev/next buttons and scrollbar elements）")])]),t._v(" "),e("tr",[e("td",[t._v("runCallbacksOnInit")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("如果你的初始化slide不是第一个(例initialSlide:2)或者设置了loop: true，"),e("br"),t._v("那么初始化时会触发一次 [Transition/SlideChange] [Start/End] 回调函数，如果不想触发，设置为false")])]),t._v(" "),e("tr",[e("td",[t._v("watchOverflow")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("当没有足够的slide切换时，例如只有1个slide（非loop），swiper会失效且隐藏导航等。默认不开启这个功能")])]),t._v(" "),e("tr",[e("td",[t._v("on")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("注册事件")])]),t._v(" "),e("tr",[e("td",[t._v("spaceBetween")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("滑块间距离")])]),t._v(" "),e("tr",[e("td",[t._v("slidesPerView")]),t._v(" "),e("td",[t._v("number/'auto'")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("每行显示滑块数，auto自动填充")])]),t._v(" "),e("tr",[e("td",[t._v("slidesPerColumn")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("每列显示滑块数")])]),t._v(" "),e("tr",[e("td",[t._v("slidesPerColumnFill")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'column'")]),t._v(" "),e("td",[t._v("填充次序按照行开始还是列开始")])]),t._v(" "),e("tr",[e("td",[t._v("slidesPerGroup")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("每组多少个滑块")])]),t._v(" "),e("tr",[e("td",[t._v("centeredSlides")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设定为true时，active slide会居中，而不是默认状态下的居左")])]),t._v(" "),e("tr",[e("td",[t._v("slidesOffsetBefore")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("设定slide与左边框的预设偏移量")])]),t._v(" "),e("tr",[e("td",[t._v("slidesOffsetAfter")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("设定slide与右边框的预设偏移量")])]),t._v(" "),e("tr",[e("td",[t._v("normalizeSlideIndex")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("使你的活动块指示为最左边的那个slide")])]),t._v(" "),e("tr",[e("td",[t._v("centerInsufficientSlides")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启这个参数，当slides的总数小于slidesPerView时，slides居中")])]),t._v(" "),e("tr",[e("td",[t._v("grabCursor")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设置为true时，鼠标覆盖Swiper时指针会变成手掌形状，拖动时指针会变成抓手形状")])]),t._v(" "),e("tr",[e("td",[t._v("touchEventsTarget")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'container'")]),t._v(" "),e("td",[t._v("接受touch事件的目标，可以设为container或者wrapper")])]),t._v(" "),e("tr",[e("td",[t._v("touchRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("触摸比例。触摸距离与slide滑动距离的比率,利用复数可以反向滑动")])]),t._v(" "),e("tr",[e("td",[t._v("touchAngle")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("45")]),t._v(" "),e("td",[t._v("允许触发拖动的角度值。默认45度，即使触摸方向不是完全水平也能拖动slide")])]),t._v(" "),e("tr",[e("td",[t._v("simulateTouch")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("鼠标模拟手机触摸")])]),t._v(" "),e("tr",[e("td",[t._v("shortSwipes")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("默认允许短切换。设置为false时，只能长切换，进行快速且短距离的滑动无法触发切换")])]),t._v(" "),e("tr",[e("td",[t._v("longSwipes")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("设置为false时，进行长时间长距离的拖动无法触发Swiper")])]),t._v(" "),e("tr",[e("td",[t._v("longSwipesRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0.5")]),t._v(" "),e("td",[t._v("进行longSwipes时触发swiper所需要的最小拖动距离比例，即定义longSwipes距离比例。"),e("br"),t._v("值越大触发Swiper所需距离越大。最大值0.5")])]),t._v(" "),e("tr",[e("td",[t._v("longSwipesMs")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("300")]),t._v(" "),e("td",[t._v("定义longSwipes的时间（单位ms），超过则属于longSwipes")])]),t._v(" "),e("tr",[e("td",[t._v("followFinger")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("跟随手指。如设置为false，手指滑动时slide不会动，当你释放时slide才会切换")])]),t._v(" "),e("tr",[e("td",[t._v("allowTouchMove")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("允许触摸滑动。"),e("br"),t._v("设为false时，slide无法滑动，只能使用扩展API函数例如slideNext() 或slidePrev()或slideTo()等改变slides滑动")])]),t._v(" "),e("tr",[e("td",[t._v("threshold")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("拖动的临界值（单位为px），如果触摸距离小于该值滑块不会被拖动")])]),t._v(" "),e("tr",[e("td",[t._v("touchStartPreventDefault")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("阻止"),e("code",[t._v("touchstart")]),t._v(" ("),e("code",[t._v("mousedown")]),t._v(")的默认事件，设置为false则不阻止")])]),t._v(" "),e("tr",[e("td",[t._v("touchStartForcePreventDefault")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("是否强制阻止"),e("code",[t._v("touchstart")]),t._v(" ("),e("code",[t._v("mousedown")]),t._v(")的默认事件，即使Swiper不允许滑动(allowTouchMove:false)")])]),t._v(" "),e("tr",[e("td",[t._v("touchMoveStopPropagation")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("true时阻止touchmove冒泡事件")])]),t._v(" "),e("tr",[e("td",[t._v("iOSEdgeSwipeDetection")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设置为true开启IOS的UIWebView环境下的边缘探测。如果拖动是从屏幕边缘开始则不触发swiper。"),e("br"),t._v("这样当你在屏幕边缘滑动Swiper时，则可以返回上一页（history.back）或切换至下一页")])]),t._v(" "),e("tr",[e("td",[t._v("iOSEdgeSwipeThreshold")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("20")]),t._v(" "),e("td",[t._v("IOS的UIWebView环境下的边缘探测距离。如果拖动小于边缘探测距离则不触发swiper")])]),t._v(" "),e("tr",[e("td",[t._v("touchReleaseOnEdges")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("当滑动到Swiper的边缘时释放滑动，可以用于同向Swiper的嵌套（移动端触摸有效）")])]),t._v(" "),e("tr",[e("td",[t._v("passiveListeners")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("用来提升swiper在移动设备的中的scroll表现（Passive Event Listeners），但是会和e.preventDefault冲突，所以有时候你需要关掉它")])]),t._v(" "),e("tr",[e("td",[t._v("resistance")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("边缘抵抗。当swiper已经处于第一个或最后一个slide时，继续拖动Swiper会离开边界，释放后弹回。"),e("br"),t._v("边缘抵抗就是拖离边界时的抵抗力。值为false时禁用，将slide拖离边缘时完全没有抗力")])]),t._v(" "),e("tr",[e("td",[t._v("resistanceRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0.85")]),t._v(" "),e("td",[t._v("抵抗率。边缘抵抗力的大小比例。值越小抵抗越大越难将slide拖离边缘，0时完全无法拖离")])]),t._v(" "),e("tr",[e("td",[t._v("preventInteractionOnTransition")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("如果开启这个选项，当你的Swiper在过渡时将无法滑动")])]),t._v(" "),e("tr",[e("td",[t._v("allowSlidePrev")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("设为false可禁止向左或上滑动")])]),t._v(" "),e("tr",[e("td",[t._v("allowSlideNext")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("设为false可禁止向右或下滑动")])]),t._v(" "),e("tr",[e("td",[t._v("noSwiping")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("设为true时，可以在slide上（或其他元素）增加类名'swiper-no-swiping'，使该slide无法拖动，"),e("br"),t._v("希望文字被选中时可以考虑使用.该类名可通过noSwipingClass修改")])]),t._v(" "),e("tr",[e("td",[t._v("noSwipingClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-no-swiping'")]),t._v(" "),e("td",[t._v("不可拖动块的类名，当noSwiping设置为true时，并且在slide（或其他元素）加上此类名，"),e("br"),t._v("目标将无法触摸拖动")])]),t._v(" "),e("tr",[e("td",[t._v("noSwipingSelector")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("设置不可触摸滑动的元素(如input)")])]),t._v(" "),e("tr",[e("td",[t._v("swipeHandler")]),t._v(" "),e("td",[t._v("string / HTMLElement")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("CSS选择器或者HTML元素。你只能拖动它进行swiping")])]),t._v(" "),e("tr",[e("td",[t._v("preventClicks")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("当swiper在触摸时阻止默认事件（preventDefault），用于防止触摸时触发链接跳转")])]),t._v(" "),e("tr",[e("td",[t._v("preventClicksPropagation")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("阻止click冒泡。拖动Swiper时阻止click事件")])]),t._v(" "),e("tr",[e("td",[t._v("slideToClickedSlide")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设置为true则点击slide会过渡到这个slide")])]),t._v(" "),e("tr",[e("td",[t._v("freeMode")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("默认为false，普通模式：slide滑动时只滑动一格，并自动贴合wrapper，设置为true则变为free模式，"),e("br"),t._v("slide会根据惯性滑动可能不止一格且不会贴合")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeMomentum")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("free模式动量。free模式下，若设置为false则关闭动量，释放slide之后立即停止不会滑动")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeMomentumRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("free模式动量值（移动惯量）。设置的值越大，当释放slide时的滑动时间越长。默认1s")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeMomentumVelocityRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("free模式惯性速度，设置越大，释放后滑得越快")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeMomentumBounce")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("动量反弹。false时禁用free模式下的动量反弹，slides通过惯性滑动到边缘时，无法反弹。"),e("br"),t._v("注意与resistance（手动抵抗）区分")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeMomentumBounceRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("值越大产生的边界反弹效果越明显，反弹距离越大")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeMinimumVelocity")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0.02")]),t._v(" "),e("td",[t._v("触发FreeMode惯性的最小触摸速度（px/ms），低于这个值不会惯性滑动")])]),t._v(" "),e("tr",[e("td",[t._v("freeModeSticky")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("使得freeMode也能自动贴合")])]),t._v(" "),e("tr",[e("td",[t._v("watchSlidesProgress")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启这个参数来计算每个slide的progress(进度、进程)，对于slide的progress属性，活动的那个为0，其他的依次减1。"),e("br"),t._v("例：如果一共有6个slide，活动的是第三个，从第一个到第六个的progress属性分别是：2、1、0、-1、-2、-3，对于swiper的progress属性，活动的slide在最左（上）边时为0，活动的slide在最右（下）边时为1，其他情况平分。"),e("br"),t._v("例：有6个slide，当活动的是第三个时swiper的progress属性是0.4，当活动的是第五个时swiper的progress属性是0.8"),e("br"),t._v("swiper的progress其实就是wrapper的translate值的百分值，与activeIndex等属性不同，progress是随着swiper的切换而不停的变化，而不是在某个时间点突变")])]),t._v(" "),e("tr",[e("td",[t._v("watchSlidesVisibility")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启watchSlidesVisibility选项前需要先开启watchSlidesProgress，如果开启了watchSlidesVisibility，"),e("br"),t._v("则会在每个可见slide增加一个classname，默认为'swiper-slide-visible'")])]),t._v(" "),e("tr",[e("td",[t._v("preloadImages")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("默认为true，Swiper会强制加载所有图片")])]),t._v(" "),e("tr",[e("td",[t._v("updateOnImagesReady")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("当所有的内嵌图像（img标签）加载完成后Swiper会重新初始化。"),e("br"),t._v("使用此选项需要先开启preloadImages: true")])]),t._v(" "),e("tr",[e("td",[t._v("loop")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("loop模式：会在原本slide前后复制若干个slide(默认一个)并在合适的时候切换，让Swiper看起来是循环的。 "),e("br"),t._v("loop模式在与free模式同用时会产生抖动，因为free模式下没有复制slide的时间点")])]),t._v(" "),e("tr",[e("td",[t._v("loopAdditionalSlides")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("loop模式下会在slides前后复制若干个slide,，前后复制的个数不会大于原总个数"),e("br"),t._v("默认为0，前后各复制1个。0,1,2 --\x3e 2,0,1,2,0"),e("br"),t._v("例：取值为1，0,1,2 --\x3e 1,2,0,1,2,0,1"),e("br"),t._v("例：取值为2或以上，0,1,2 --\x3e 0,1,2,0,1,2,0,1,2")])]),t._v(" "),e("tr",[e("td",[t._v("loopedSlides")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("在loop模式下使用slidesPerview:'auto'，还需使用该参数设置所要用到的loop个数(一般设置大于可视slide个数2个即可)")])]),t._v(" "),e("tr",[e("td",[t._v("loopFillGroupWithBlank")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("在loop模式下，为group填充空白slide")])]),t._v(" "),e("tr",[e("td",[t._v("breakpoints")]),t._v(" "),e("td",[t._v("object")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("断点设定：根据屏幕宽度设置某参数为不同的值，类似于响应式布局的media only screen and (max-width: 480px)"),e("br"),t._v("只有部分不需要变换布局方式和逻辑结构的参数支持断点设定，"),e("br"),t._v("如slidesPerView、slidesPerGroup、 spaceBetween，而像slidesPerColumn、loop、direction、effect等则无效")])]),t._v(" "),e("tr",[e("td",[t._v("breakpointsInverse")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启后，breakpoints将以反方向计算，类似于media only screen and (min-width: 480px)")])]),t._v(" "),e("tr",[e("td",[t._v("observer")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("启动动态检查器(OB/观众/观看者)，当改变swiper的样式（例如隐藏/显示）或者修改swiper的子元素时，自动初始化swiper。"),e("br"),t._v("默认false，不开启，可以使用update()方法更新")])]),t._v(" "),e("tr",[e("td",[t._v("observeParents")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("将observe应用于Swiper的父元素。"),e("br"),t._v("当Swiper的父元素变化时，例如window.resize，Swiper更新")])]),t._v(" "),e("tr",[e("td",[t._v("observeSlideChildren")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("子slide更新时，swiper是否更新。默认为false不更新")])]),t._v(" "),e("tr",[e("td",[t._v("containerModifierClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-container-'")]),t._v(" "),e("td",[t._v("可以修改某些以swiper-container-为开头的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide'")]),t._v(" "),e("td",[t._v("设置slide的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideActiveClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-active'")]),t._v(" "),e("td",[t._v("设置活动块的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideDuplicateActiveClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("swiper-slide-duplicate-active")]),t._v(" "),e("td",[t._v("loop模式下活动块对应复制块的类名，或者相反")])]),t._v(" "),e("tr",[e("td",[t._v("slideVisibleClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("swiper-slide-visible")]),t._v(" "),e("td",[t._v("设置可视块的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideDuplicateClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-duplicate'")]),t._v(" "),e("td",[t._v("loop模式下被复制的slide的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideNextClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-next'")]),t._v(" "),e("td",[t._v("active slide的下一个slide的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideDuplicateNextClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-duplicate-next'")]),t._v(" "),e("td",[t._v("loop模式下，下一个slide对应复制块的类名，或者相反")])]),t._v(" "),e("tr",[e("td",[t._v("slidePrevClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-prev'")]),t._v(" "),e("td",[t._v("active slide的前一个slide的类名")])]),t._v(" "),e("tr",[e("td",[t._v("slideDuplicatePrevClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-duplicate-prev'")]),t._v(" "),e("td",[t._v("loop下，前一个slide对应复制块的类名，或者相反")])]),t._v(" "),e("tr",[e("td",[t._v("wrapperClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-wrapper'")]),t._v(" "),e("td",[t._v("设置wrapper的css类名")])])])]),t._v(" "),e("h1",{attrs:{id:"slider-的方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#slider-的方法和属性"}},[t._v("#")]),t._v(" Slider 的方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("属性或方法")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("params")]),t._v(" "),e("td",[t._v("重要参数，获取Swiper对象初始化参数，或者重写该参数，"),e("br"),t._v("如： mySwiper.params.speed = 200。"),e("br"),t._v("*不是所有参数都可以重写")])]),t._v(" "),e("tr",[e("td",[t._v("$el")]),t._v(" "),e("td",[t._v("swiper的container的Dom7/jQuery对象。可以通过mySwiper.el得到container的HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("$wrapperEl")]),t._v(" "),e("td",[t._v("获取swiper的wrapper的Dom7对象。"),e("br"),t._v("可以通过mySwiper.wrapperEl得到wrapper的HTML元素。"),e("br"),t._v("如需拿到slides的总宽度，需要设置wrapper的setWrapperSize")])]),t._v(" "),e("tr",[e("td",[t._v("slides")]),t._v(" "),e("td",[t._v("获取Swiper的slides的Dom7/jQuery对象。"),e("br"),t._v("通过mySwiper.slides[1]获取特定的slide。"),e("br"),t._v("如需拿到slides的总宽度，需要设置wrapper的setWrapperSize")])]),t._v(" "),e("tr",[e("td",[t._v("width")]),t._v(" "),e("td",[t._v("获取swiper容器的宽度")])]),t._v(" "),e("tr",[e("td",[t._v("height")]),t._v(" "),e("td",[t._v("获取swiper容器的高度")])]),t._v(" "),e("tr",[e("td",[t._v("translate")]),t._v(" "),e("td",[t._v("这个属性可以获取到wrapper的位移，过渡中得到的则是过渡完成时的位移。"),e("br"),t._v("如需实时位移可以使用 swiper.getTranslate()")])]),t._v(" "),e("tr",[e("td",[t._v("progress")]),t._v(" "),e("td",[t._v("获取Swiper的progress值")])]),t._v(" "),e("tr",[e("td",[t._v("activeIndex")]),t._v(" "),e("td",[t._v("返回当前活动块(激活块)的索引。loop模式下注意该值会被加上复制的slide数")])]),t._v(" "),e("tr",[e("td",[t._v("realIndex")]),t._v(" "),e("td",[t._v("当前活动块的索引，与activeIndex不同的是，在loop模式下不会将复制的块的数量计算在内")])]),t._v(" "),e("tr",[e("td",[t._v("previousIndex")]),t._v(" "),e("td",[t._v("返回上一个活动块的索引，切换前的索引")])]),t._v(" "),e("tr",[e("td",[t._v("isBegining")]),t._v(" "),e("td",[t._v("如果Swiper位于最左/上，这个值为true")])]),t._v(" "),e("tr",[e("td",[t._v("isEnd")]),t._v(" "),e("td",[t._v("如果Swiper位于最右/下，这个值为true")])]),t._v(" "),e("tr",[e("td",[t._v("animating")]),t._v(" "),e("td",[t._v("如果Swiper正在过渡（自由滑动），这个值为true")])]),t._v(" "),e("tr",[e("td",[t._v("touches")]),t._v(" "),e("td",[t._v("返回包含触控信息的对象数组，就是这5个。"),e("br"),t._v("mySwiper.touches.startX    触摸开始点的X值"),e("br"),t._v("mySwiper.touches.startY    触摸开始点的Y值"),e("br"),t._v("mySwiper.touches.currentX    触摸当前点的X值"),e("br"),t._v("mySwiper.touches.currentY    触摸当前点的Y值"),e("br"),t._v("mySwiper.touches.diff    当前滑动方向的触摸滑动距离")])]),t._v(" "),e("tr",[e("td",[t._v("clickedIndex")]),t._v(" "),e("td",[t._v("返回最后点击Slide的索引")])]),t._v(" "),e("tr",[e("td",[t._v("clickedSlide")]),t._v(" "),e("td",[t._v("返回最后点击（非拖动）的Slide的HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("allowSlideNext")]),t._v(" "),e("td",[t._v("提示或设置是否允许切换至下一个slide")])]),t._v(" "),e("tr",[e("td",[t._v("allowSlidePrev")]),t._v(" "),e("td",[t._v("设置/提示是否允许切换至前一个slide")])]),t._v(" "),e("tr",[e("td",[t._v("allowTouchMove")]),t._v(" "),e("td",[t._v("设置/查看是否禁止触摸滑动")])]),t._v(" "),e("tr",[e("td",[t._v("slideNext(speed, runCallbacks)")]),t._v(" "),e("td",[t._v("滑动到下一个滑块。"),e("br"),t._v("speed：可选，切换速度"),e("br"),t._v("runCallbacks：可选，设为false不触发transition回调函数")])]),t._v(" "),e("tr",[e("td",[t._v("slidePrev(speed, runCallbacks)")]),t._v(" "),e("td",[t._v("滑动到上一个滑块。"),e("br"),t._v("speed：可选，切换速度"),e("br"),t._v("runCallbacks：可选，设为false不触发transition回调函数")])]),t._v(" "),e("tr",[e("td",[t._v("slideTo(index, speed, runCallbacks)")]),t._v(" "),e("td",[t._v("滑动到指定索引滑块。"),e("br"),t._v("index:必选，num，指定将要切换到的slide的索引。"),e("br"),t._v("speed：可选，切换速度"),e("br"),t._v("runCallbacks：可选，设为false不触发transition回调函数")])]),t._v(" "),e("tr",[e("td",[t._v("slideToLoop(index, speed, runCallbacks)")]),t._v(" "),e("td",[t._v("在Loop模式下Swiper切换到指定slide。切换到的是slide索引是realIndex"),e("br"),t._v("index:必选，num，指定将要切换到的slide的索引。"),e("br"),t._v("speed:可选，num(单位ms)，切换速度"),e("br"),t._v("runCallbacks: 可选，boolean，设置为false时不会触发transition回调函数")])]),t._v(" "),e("tr",[e("td",[t._v("slideReset(speed, runCallbacks)")]),t._v(" "),e("td",[t._v("将滑块位置重置为当前滑块")])]),t._v(" "),e("tr",[e("td",[t._v("slideToClosest(speed, runCallbacks)")]),t._v(" "),e("td",[t._v("使得Swiper贴合边缘，当你使用freeMode时可能会需要"),e("br"),t._v("speed:number 贴合速度ms(可选)"),e("br"),t._v("runCallbacks:boolean 贴合时是否产生transition事件，默认true")])]),t._v(" "),e("tr",[e("td",[t._v("updateAutoHeight(speed)")]),t._v(" "),e("td",[t._v("当autoHeight为启用状态，设置更新swiper高度的时间。"),e("br"),t._v("speed:number 速度ms(可选)")])]),t._v(" "),e("tr",[e("td",[t._v("update()")]),t._v(" "),e("td",[t._v("更新Swiper，这个方法包含了updateContainerSize，updateSlidesSize，updateProgress，updateClasses方法。"),e("br"),t._v("可选参数：updateTranslate，默认false，设置为true则重新计算Wrapper的位移")])]),t._v(" "),e("tr",[e("td",[t._v("changeDirection(direction)")]),t._v(" "),e("td",[t._v("动态改变切换方向。"),e("br"),t._v("可选择方向direction: horizontal或vertical，留空则自动改变")])]),t._v(" "),e("tr",[e("td",[t._v("detachEvents()")]),t._v(" "),e("td",[t._v("移除所有监听事件")])]),t._v(" "),e("tr",[e("td",[t._v("attachEvents()")]),t._v(" "),e("td",[t._v("重新绑定所有监听事件")])]),t._v(" "),e("tr",[e("td",[t._v("destroy(deleteInstance, cleanStyles)")]),t._v(" "),e("td",[t._v("销毁Swiper。销毁所有绑定的监听事件，移除鼠标键盘事件，释放浏览器内存。"),e("br"),t._v("deleteInstance:可选，设为false则不销毁Swiper对象，默认为true。"),e("br"),t._v("cleanupStyles:可选，设为true则清除所有swiper设定选项和样式，比如direction等，默认为false。")])]),t._v(" "),e("tr",[e("td",[t._v("appendSlide(slides)")]),t._v(" "),e("td",[t._v("添加slide到slides的结尾。可以是HTML元素或slide数组，例"),e("br"),t._v("mySwiper.appendSlide('<div class=\"swiper-slide\">Slide 10</div>')"),e("br"),t._v("mySwiper.appendSlide([ '<div class=\"swiper-slide\">Slide 10</div>', '<div class=\"swiper-slide\">Slide 11</div>' ])")])]),t._v(" "),e("tr",[e("td",[t._v("prependSlide(slides)")]),t._v(" "),e("td",[t._v("添加slide到slides的第一个位置。可以是HTML元素或slide数组")])]),t._v(" "),e("tr",[e("td",[t._v("addSlide(index, slides)")]),t._v(" "),e("td",[t._v("在指定位置增加slide。可以是HTML元素或slide数组")])]),t._v(" "),e("tr",[e("td",[t._v("removeSlide(slideIndex)")]),t._v(" "),e("td",[t._v("移除索引为index的slide")])]),t._v(" "),e("tr",[e("td",[t._v("removeAllSlides()")]),t._v(" "),e("td",[t._v("移除所有slides")])]),t._v(" "),e("tr",[e("td",[t._v("setTranslate(translate)")]),t._v(" "),e("td",[t._v("手动设置wrapper的位移。在其他非位移的切换时则表现为相应的效果，例如3D切换时改变的是角度。"),e("br"),t._v("translate：必选，位移值（单位px）。"),e("br"),t._v("例：swiper宽度为500，设置translate为-250。"),e("br"),t._v("在默认的effect: slide时，swiper会向左滑动250px，如果设置了切换效果effect: cube，swiper会旋转45度。")])]),t._v(" "),e("tr",[e("td",[t._v("getTranslate()")]),t._v(" "),e("td",[t._v("返回实时的wrapper位移（translate）")])]),t._v(" "),e("tr",[e("td",[t._v("on(event, handler)")]),t._v(" "),e("td",[t._v("添加回调函数或者事件句柄")])]),t._v(" "),e("tr",[e("td",[t._v("once(event, handler)")]),t._v(" "),e("td",[t._v("添加回调函数或者事件句柄，这些事件只会执行一次")])]),t._v(" "),e("tr",[e("td",[t._v("off(event, handler)")]),t._v(" "),e("td",[t._v("移除某个回调/事件")])]),t._v(" "),e("tr",[e("td",[t._v("off(event)")]),t._v(" "),e("td",[t._v("移除事件的所有句柄")])]),t._v(" "),e("tr",[e("td",[t._v("unsetGrabCursor()")]),t._v(" "),e("td",[t._v("关闭鼠标的抓手形状")])]),t._v(" "),e("tr",[e("td",[t._v("setGrabCursor()")]),t._v(" "),e("td",[t._v("开启鼠标的抓手形状，相当于开启grabCursor")])])])]),t._v(" "),e("h1",{attrs:{id:"events"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#events"}},[t._v("#")]),t._v(" Events")]),t._v(" "),e("p",[t._v("Swiper的事件可以以两种方式监听")]),t._v(" "),e("p",[t._v("1.用swiper初始化参数的方式")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n  // ...\n  on: {\n    init: function () {\n      console.log('swiper initialized');\n    },\n  },\n};\n")])])]),e("p",[t._v("2.在swiper初始化后使用监听方法")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n  // ...\n};\nmySwiper.on('slideChange', function () {\n  console.log('slide changed');\n});\n")])])]),e("ul",[e("li",[e("em",[t._v("注：this 关键字在 event 事件句柄中总是表示 swiper 实例")])])]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("init")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("事件函数，初始化后执行")])]),t._v(" "),e("tr",[e("td",[t._v("beforeDestory")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，销毁Swiper时执行")])]),t._v(" "),e("tr",[e("td",[t._v("slideChange")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("当当前Slide切换时执行(activeIndex发生改变)")])]),t._v(" "),e("tr",[e("td",[t._v("slideChangeTransitionStart")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，swiper从当前slide开始过渡到另一个slide时执行")])]),t._v(" "),e("tr",[e("td",[t._v("slideChangeTransitionEnd")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，swiper从一个slide过渡到另一个slide结束时执行")])]),t._v(" "),e("tr",[e("td",[t._v("slideNextTransitionStart")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，滑块释放时如果触发slider向前(右、下)切换则执行。"),e("br"),t._v("类似于slideChangeTransitionStart，但规定了方向")])]),t._v(" "),e("tr",[e("td",[t._v("slideNextTransitionEnd")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，slider向前(右、下)切换结束时执行。"),e("br"),t._v("类似于slideChangeTransitionEnd，但规定了方向")])]),t._v(" "),e("tr",[e("td",[t._v("slidePrevTransitionStart")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，滑块释放时如果触发slider向后(左、上)切换则执行。"),e("br"),t._v("类似于slideChangeTransitionStart，但规定了方向")])]),t._v(" "),e("tr",[e("td",[t._v("slidePrevTransitionEnd")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，slider向后(左、上)切换结束时执行。"),e("br"),t._v("类似于slideChangeTransitionEnd，但规定了方向")])]),t._v(" "),e("tr",[e("td",[t._v("transitionStart")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，过渡开始时触发")])]),t._v(" "),e("tr",[e("td",[t._v("transitionEnd")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，过渡结束时触发")])]),t._v(" "),e("tr",[e("td",[t._v("touchStart")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数，当碰触到slider时执行。可选touchstart事件作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("touchMove")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("手指触碰Swiper并滑动（手指）时执行，接受touchmove事件作为参数。"),e("br"),t._v("此时slide不一定会发生移动，比如你手指的移动方向和swiper的切换方向垂直时。对比sliderMove")])]),t._v(" "),e("tr",[e("td",[t._v("touchMoveOpposite")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数。当手指触碰Swiper并且没有按照direction设定的方向移动时执行。"),e("br"),t._v("此时slide没有被拖动，这与sliderMove事件相反。可选touchmove事件作为参数。")])]),t._v(" "),e("tr",[e("td",[t._v("sliderMove")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数，手指触碰Swiper并拖动slide时执行。接受touchmove事件作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("touchEnd")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数，触摸释放时执行，接受 touchend事件作为参数。（释放即执行）")])]),t._v(" "),e("tr",[e("td",[t._v("click")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数，当你点击或轻触Swiper 300ms后执行,接受touchend事件作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("tap")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数，当你轻触(tap)Swiper后执行。在移动端，click会有 200~300 ms延迟，所以请用tap代替click作为点击事件。"),e("br"),t._v("接受touchend事件作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("doubleTap")]),t._v(" "),e("td",[t._v("event")]),t._v(" "),e("td",[t._v("回调函数，当你两次轻触Swiper 时执行，类似于双击。"),e("br"),t._v("接受touchend事件作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("imagesReady")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，所有内置图像加载完成后执行，同时“updateOnImagesReady”需设置为“true’")])]),t._v(" "),e("tr",[e("td",[t._v("progress")]),t._v(" "),e("td",[t._v("progress")]),t._v(" "),e("td",[t._v("回调函数，当Swiper的progress被改变时执行。"),e("br"),t._v("接受Swiper的progress作为参数（0-1）")])]),t._v(" "),e("tr",[e("td",[t._v("reachBeginning")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，Swiper切换到初始化位置时执行")])]),t._v(" "),e("tr",[e("td",[t._v("reachEnd")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("回调函数，当Swiper切换到最后一个Slide时执行")])]),t._v(" "),e("tr",[e("td",[t._v("fromEdge")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("当Swiper是从第一个或最后一个Slide切换时执行")])]),t._v(" "),e("tr",[e("td",[t._v("setTranslate")]),t._v(" "),e("td",[t._v("translate")]),t._v(" "),e("td",[t._v("回调函数，每当设置Swiper开始过渡动画时执行。transtion获取到的是Swiper的speed值")])]),t._v(" "),e("tr",[e("td",[t._v("setTranslation")]),t._v(" "),e("td",[t._v("transition")]),t._v(" "),e("td",[t._v("回调函数。当设置wrapper的偏移量时执行。可选swiper对象和wrapper的偏移量作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("resize")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("当你的浏览器尺寸发生变化时执行")])]),t._v(" "),e("tr",[e("td",[t._v("observerUpdate")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("观察者模式，swiper内部dom结构变化时触发")])])])]),t._v(" "),e("p",[e("em",[t._v("注： 点击事件触发时机")])]),t._v(" "),e("ul",[e("li",[t._v("如果没有触发touchMove()，则释放触摸/鼠标时：")]),t._v(" "),e("li",[t._v("1.立即执行tap()")]),t._v(" "),e("li",[t._v("2.如果触摸/鼠标按压时间小于300ms，并且两次触摸/点击间隔大于300ms，延迟300ms执行onClick")]),t._v(" "),e("li",[t._v("3.如果触摸/鼠标按压时间小于300ms，并且两次触摸/点击间隔小于300ms，立即执行doubleTap")])]),t._v(" "),e("h1",{attrs:{id:"components-组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#components-组件"}},[t._v("#")]),t._v(" Components 组件")]),t._v(" "),e("h2",{attrs:{id:"_1-navigation-导航组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_1-navigation-导航组件"}},[t._v("#")]),t._v(" 1. Navigation(导航组件)")]),t._v(" "),e("h3",{attrs:{id:"navigation-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigation-参数"}},[t._v("#")]),t._v(" Navigation 参数")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    navigation: {\n        nextEl: '.swiper-button-next',\n        prevEl: '.swiper-button-prev',\n    },\n});\n")])])]),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("nextEl")]),t._v(" "),e("td",[t._v("string/HTMLElement")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("前进按钮的css选择器或HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("prevEl")]),t._v(" "),e("td",[t._v("string/HTMLElement")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("后退按钮的css选择器或HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("hideOnClick")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("点击slide时显示/隐藏按钮")])]),t._v(" "),e("tr",[e("td",[t._v("disabledClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-button-disabled'")]),t._v(" "),e("td",[t._v("前进后退按钮不可用时的类名")])]),t._v(" "),e("tr",[e("td",[t._v("hiddenClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-button-hidden'")]),t._v(" "),e("td",[t._v("按钮隐藏时的Class")])])])]),t._v(" "),e("h3",{attrs:{id:"navigation-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#navigation-方法和属性"}},[t._v("#")]),t._v(" Navigation 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.navigation.nextEl")]),t._v(" "),e("td",[t._v("获取前进按钮的HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.navigation.prevEl")]),t._v(" "),e("td",[t._v("获取后退按钮的HTML元素。通过$prevEl获取DOM7")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.navigation.update()")]),t._v(" "),e("td",[t._v("更新前进后退导航按钮")])])])]),t._v(" "),e("h3",{attrs:{id:"事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#事件"}},[t._v("#")]),t._v(" 事件")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("事件")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("navigationHide")]),t._v(" "),e("td",[t._v("事件函数，navigation隐藏时执行")])]),t._v(" "),e("tr",[e("td",[t._v("navigationShow")]),t._v(" "),e("td",[t._v("事件函数，navigation显示时执行")])])])]),t._v(" "),e("h2",{attrs:{id:"_2-pagination-分页组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_2-pagination-分页组件"}},[t._v("#")]),t._v(" 2. Pagination(分页组件)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    pagination: {\n        el: '.swiper-pagination',\n        type: 'bullets',\n    },\n});\n")])])]),e("h3",{attrs:{id:"pagination-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pagination-参数"}},[t._v("#")]),t._v(" Pagination 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("el")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("前进按钮的css选择器或HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("type")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'bullets'")]),t._v(" "),e("td",[t._v("分页器样式类型，可选"),e("br"),t._v("‘bullets’  圆点（默认）"),e("br"),t._v("‘fraction’  分式 "),e("br"),t._v("‘progressbar’  进度条"),e("br"),t._v("‘custom’ 自定义")])]),t._v(" "),e("tr",[e("td",[t._v("bulletElement")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'span'")]),t._v(" "),e("td",[t._v("设定分页器指示器（小点）的HTML标签")])]),t._v(" "),e("tr",[e("td",[t._v("dynamicBullets")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("动态分页器，当你的slide很多时，开启后，分页器小点的数量会部分隐藏")])]),t._v(" "),e("tr",[e("td",[t._v("dynamicMainBullets")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("动态分页器的主指示点的数量")])]),t._v(" "),e("tr",[e("td",[t._v("hideOnClick")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("默认分页器会一直显示。这个选项设置为true时点击Swiper会隐藏/显示分页器")])]),t._v(" "),e("tr",[e("td",[t._v("clickable")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("此参数设置为true时，点击分页器的指示点分页器会控制Swiper切换")])]),t._v(" "),e("tr",[e("td",[t._v("progressbarOpposite")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("使进度条分页器与Swiper的direction参数相反，"),e("br"),t._v("也就是说水平方向切换的swiper显示的是垂直进度条而垂直方向切换的swiper显示水平进度条")])]),t._v(" "),e("tr",[e("td",[t._v("formatFractionCurrent")]),t._v(" "),e("td",[t._v("function(number)")]),t._v(" "),e("td",[t._v("number => number")]),t._v(" "),e("td",[t._v("格式化分式分页器的当前指示数值，接受当前数值作为参数，必须返回一个自定义的数值")])]),t._v(" "),e("tr",[e("td",[t._v("formatFractionTotal")]),t._v(" "),e("td",[t._v("function(number)")]),t._v(" "),e("td",[t._v("number => number")]),t._v(" "),e("td",[t._v("格式化分式分页器的总指示数值，接受总数值作为参数，必须返回一个自定义的数值")])]),t._v(" "),e("tr",[e("td",[t._v("renderBullet")]),t._v(" "),e("td",[t._v("function(index, className)")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("渲染分页器小点。这个参数允许完全自定义分页器的指示点。"),e("br"),t._v("接受指示点索引和指示点类名作为参数")])]),t._v(" "),e("tr",[e("td",[t._v("renderFraction")]),t._v(" "),e("td",[t._v("function(currentClass, totalClass)")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("自定义分式类型分页器，当分页器类型设置为分式时可用")])]),t._v(" "),e("tr",[e("td",[t._v("renderProgressbar")]),t._v(" "),e("td",[t._v("function(progressbarFillClass)")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("自定义进度条类型分页器，当分页器类型设置为进度条时可用")])]),t._v(" "),e("tr",[e("td",[t._v("renderCustom")]),t._v(" "),e("td",[t._v("function(swiper, current, total)")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("自定义特殊类型分页器，当分页器类型设置为自定义时可用")])]),t._v(" "),e("tr",[e("td",[t._v("bulletClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-bullet'")]),t._v(" "),e("td",[t._v("pagination分页器内元素的类名")])]),t._v(" "),e("tr",[e("td",[t._v("bulletActiveClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-bullet-active'")]),t._v(" "),e("td",[t._v("pagination分页器内活动(active)元素的类名")])]),t._v(" "),e("tr",[e("td",[t._v("modifierClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-'")]),t._v(" "),e("td",[t._v("修改以swiper-pagination-为前缀的类名")])]),t._v(" "),e("tr",[e("td",[t._v("currentClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-current'")]),t._v(" "),e("td",[t._v("分式类型分页器的当前索引的类名")])]),t._v(" "),e("tr",[e("td",[t._v("totalClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-hidden'")]),t._v(" "),e("td",[t._v("分式类型分页器总数的类名")])]),t._v(" "),e("tr",[e("td",[t._v("hiddenClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-hidden'")]),t._v(" "),e("td",[t._v("分页器隐藏时的类名")])]),t._v(" "),e("tr",[e("td",[t._v("progressbarFillClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-progressbar-fill'")]),t._v(" "),e("td",[t._v("进度条型分页器的指示条的类名")])]),t._v(" "),e("tr",[e("td",[t._v("clickableClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-clickable'")]),t._v(" "),e("td",[t._v("可点击的pagination的类名")])]),t._v(" "),e("tr",[e("td",[t._v("lockClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-pagination-lock'")]),t._v(" "),e("td",[t._v("禁止的pagination的类名")])])])]),t._v(" "),e("h3",{attrs:{id:"pagination-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pagination-方法和属性"}},[t._v("#")]),t._v(" Pagination 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.pagination.el")]),t._v(" "),e("td",[t._v("获取分页器导航的容器元素")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.pagination.bullets")]),t._v(" "),e("td",[t._v("获取Swiper的分页器的小点bullets的Dom7对象数组。"),e("br"),t._v("通过类似mySwiper.pagination.bullets[1]获取其中某个")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.pagination.render()")]),t._v(" "),e("td",[t._v("渲染分页器")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.pagination.update()")]),t._v(" "),e("td",[t._v("更新分页器")])])])]),t._v(" "),e("h3",{attrs:{id:"pagination-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pagination-事件"}},[t._v("#")]),t._v(" Pagination 事件")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("paginationRender")]),t._v(" "),e("td",[t._v("swiper, paginationEl")]),t._v(" "),e("td",[t._v("分页器渲染时触发事件")])]),t._v(" "),e("tr",[e("td",[t._v("paginationUpdate")]),t._v(" "),e("td",[t._v("swiper, paginationEl")]),t._v(" "),e("td",[t._v("分页器更新时触发事件")])]),t._v(" "),e("tr",[e("td",[t._v("paginationHide")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("事件函数，隐藏分页器时执行")])]),t._v(" "),e("tr",[e("td",[t._v("paginationShow")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("事件函数，分页器显示时执行")])])])]),t._v(" "),e("h2",{attrs:{id:"_3-scrollbar-滚动条组件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_3-scrollbar-滚动条组件"}},[t._v("#")]),t._v(" 3. Scrollbar(滚动条组件)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    scrollbar: {\n        el: '.swiper-scrollbar',\n        draggable: true,\n    },\n});\n")])])]),e("h3",{attrs:{id:"scrollbar-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scrollbar-参数"}},[t._v("#")]),t._v(" Scrollbar 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("el")]),t._v(" "),e("td",[t._v("string/HTMLElement")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("Scrollbar容器的css选择器或HTML元素")])]),t._v(" "),e("tr",[e("td",[t._v("hide")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("滚动条是否自动隐藏。默认：false，不会自动隐藏")])]),t._v(" "),e("tr",[e("td",[t._v("draggable")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("该参数设置为true时允许拖动滚动条")])]),t._v(" "),e("tr",[e("td",[t._v("snapOnRelease")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("如果设置为false，释放滚动条时slide不会自动贴合")])]),t._v(" "),e("tr",[e("td",[t._v("dragSize")]),t._v(" "),e("td",[t._v("string/number")]),t._v(" "),e("td",[t._v("'auto'")]),t._v(" "),e("td",[t._v("设置滚动条指示的尺寸。默认'auto': 自动，或者设置num(px)")])]),t._v(" "),e("tr",[e("td",[t._v("lockClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-scrollbar-lock'")]),t._v(" "),e("td",[t._v("禁止的滚动条类名")])]),t._v(" "),e("tr",[e("td",[t._v("dragClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-scrollbar-drag'")]),t._v(" "),e("td",[t._v("可拖拽的滚动条类名")])])])]),t._v(" "),e("h3",{attrs:{id:"scrollbar-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#scrollbar-方法和属性"}},[t._v("#")]),t._v(" Scrollbar 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.scrollbar.el")]),t._v(" "),e("td",[t._v("获取滚动条的HTML元素，还可通过$el获取DOM7")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.scrollbar.dragEl")]),t._v(" "),e("td",[t._v("获取滚动条指示条的HTML元素，还可通过$dragEl获取DOM7")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.scrollbar.updateSize()")]),t._v(" "),e("td",[t._v("更新滚动条")])])])]),t._v(" "),e("h2",{attrs:{id:"_4-autoplay"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_4-autoplay"}},[t._v("#")]),t._v(" 4. Autoplay")]),t._v(" "),e("p",[t._v("autoplay: {boolean|object}")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    autoplay: {\n        delay: 5000,\n    },\n});\n")])])]),e("h3",{attrs:{id:"autoplay-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autoplay-参数"}},[t._v("#")]),t._v(" Autoplay 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("delay")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("3000")]),t._v(" "),e("td",[t._v("自动切换的时间间隔，单位ms"),e("br"),t._v("你还可以在某个slide上设置单独的停留时间，"),e("br"),t._v('例<div class="swiper-slide" data-swiper-autoplay="2000">')])]),t._v(" "),e("tr",[e("td",[t._v("stopOnLastSlide")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("如果设置为true，当切换到最后一个slide时停止自动切换")])]),t._v(" "),e("tr",[e("td",[t._v("disableOnInteraction")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("用户操作swiper之后，是否禁止autoplay。默认为true：停止。"),e("br"),t._v("如果设置为false，用户操作swiper之后自动切换不会停止，每次都会重新启动autoplay。"),e("br"),t._v("操作包括触碰，拖动，点击pagination等")])]),t._v(" "),e("tr",[e("td",[t._v("reverseDirection")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启反向自动轮播")])]),t._v(" "),e("tr",[e("td",[t._v("waitForTransition")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("等待过渡完毕。自动切换会在slide过渡完毕后才开始计时。"),e("br"),t._v("虚拟位移状态下自动切换（virtualTranslate）可能需要关闭此选项")])])])]),t._v(" "),e("h3",{attrs:{id:"autoplay-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autoplay-方法和属性"}},[t._v("#")]),t._v(" Autoplay 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.autoplay.running")]),t._v(" "),e("td",[t._v("如果Swiper开启了autoplay，这个值为true")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.autoplay.start()")]),t._v(" "),e("td",[t._v("开始自动切换。一般用来做“Play”按钮")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.autoplay.stop()")]),t._v(" "),e("td",[t._v("停止自动切换。一般用来制作“pause”按钮")])])])]),t._v(" "),e("h3",{attrs:{id:"autoplay-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#autoplay-事件"}},[t._v("#")]),t._v(" Autoplay 事件")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("autoplayStart")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("开始自动切换时触发事件")])]),t._v(" "),e("tr",[e("td",[t._v("autoplayStop")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("停止自动切换时触发事件")])]),t._v(" "),e("tr",[e("td",[t._v("autoplay")]),t._v(" "),e("td"),t._v(" "),e("td",[t._v("autoplay状态改变时触发事件")])])])]),t._v(" "),e("h2",{attrs:{id:"_5-parallax"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_5-parallax"}},[t._v("#")]),t._v(" 5. Parallax")]),t._v(" "),e("h3",{attrs:{id:"parallax-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#parallax-参数"}},[t._v("#")]),t._v(" Parallax 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("parallax")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设置为true开启视差效果。"),e("br"),t._v("效果可以应用于container或slide的子元素。当应用于container的子元素（常用于视差背景图），每次切换时视差效果仅有设定值的slide个数-1分之1")])])])]),t._v(" "),e("ul",[e("li",[t._v("1.视差位移变化\n在所需要的元素上增加data-swiper-parallax属性（与Swiper切换方向相同）或data-swiper-parallax-x （x方向） data-swiper-parallax-y（y方向）")])]),t._v(" "),e("p",[t._v("data-swiper-parallax接受两种类型的参数。\nnumber（单位：px），如-300，从右边300px进入左边出去。\npercentage（百分比），移动距离=该元素宽度 * percentage。")]),t._v(" "),e("ul",[e("li",[e("p",[t._v("2.视差透明度变化\n在所需要的元素上增加data-swiper-parallax-opacity属性。可选值0-1，如0.5，从半透明进入半透明出去")])]),t._v(" "),e("li",[e("p",[t._v("3.视差缩放变化\n在所需要的元素上增加data-swiper-parallax-scale属性。可选值如0.5，从一半大小进入一半大小出去")])])]),t._v(" "),e("p",[t._v("还可通过data-swiper-parallax-duration设定视差动画持续时间（ms）。默认值是Swiper的speed，与切换时间同步。")]),t._v(" "),e("p",[e("em",[t._v('设定透明度或缩放必须同时设定位移，否则无效(4.0.5) <div data-swiper-parallax="0" data-swiper-parallax-opacity="0.5">透明度变化</div>')])]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div class="swiper-container">\n<div style="background-image:url(/img/Parallax.jpg)" data-swiper-parallax="-23%" data-swiper-parallax-duration="3000"></div>\n    <div class="swiper-wrapper">\n       <div class="swiper-slide">\n            <div class="title" data-swiper-parallax="-100">从右边100px开始进入</div>\n            <div class="subtitle" data-swiper-parallax="-200">从右边200px开始进入</div>\n            <div class="text" data-swiper-parallax="-300" data-swiper-parallax-duration="600">\n              <p>从右边300px开始进入，时间600ms</p>\n            </div>\n            <div data-swiper-parallax="0" data-swiper-parallax-opacity="0.5" >透明度变化</div>\n            <div data-swiper-parallax-scale="0.15" >缩放变化</div>\n        </div>\n    </div>\n</div>\n<script language="javascript"> \n    var mySwiper = new Swiper(\'.swiper-container\',{\n        parallax : true,\n    })\n<\/script>\n')])])]),e("h2",{attrs:{id:"_6-lazy-loading"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_6-lazy-loading"}},[t._v("#")]),t._v(" 6. Lazy Loading")]),t._v(" "),e("p",[t._v("lazy: {object|boolean}")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    lazy: {\n        loadPrevNext: true,\n    },\n});\n")])])]),e("p",[t._v("设为true开启图片延迟加载默认值，使preloadImages无效。或者设置延迟加载选项。")]),t._v(" "),e("p",[t._v("图片延迟加载：需要将图片img标签的src改写成data-src，并且增加类名swiper-lazy。\n背景图延迟加载：载体增加属性data-background，并且增加类名swiper-lazy。")]),t._v(" "),e("p",[t._v('还可以加一个预加载，<div class="swiper-lazy-preloader"></div>\n或者白色的<div class="swiper-lazy-preloader swiper-lazy-preloader-white"></div>')]),t._v(" "),e("p",[t._v("当你设置了slidesPerView:'auto' 或者 slidesPerView > 1，还需要开启watchSlidesVisibility")]),t._v(" "),e("h3",{attrs:{id:"lazy-loading-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lazy-loading-参数"}},[t._v("#")]),t._v(" Lazy Loading 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("loadPrevNext")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设置为true允许将延迟加载应用到最接近的slide的图片（前一个和后一个slide）")])]),t._v(" "),e("tr",[e("td",[t._v("loadPrevNextAmount")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("设置在延迟加载图片时提前多少个slide。个数不可少于slidesPerView的数量。"),e("br"),t._v("默认为1，提前1个slide加载图片，例如切换到第三个slide时加载第四个slide里面的图片")])]),t._v(" "),e("tr",[e("td",[t._v("loadOnTransitionStart")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("默认当过渡到slide后开始加载图片，如果你想在过渡一开始就加载，设置为true")])]),t._v(" "),e("tr",[e("td",[t._v("elementClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-lazy'")]),t._v(" "),e("td",[t._v("延迟加载的图片的类名")])]),t._v(" "),e("tr",[e("td",[t._v("loadingClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-lazy-loading'")]),t._v(" "),e("td",[t._v("正在进行懒加载的元素的类名")])]),t._v(" "),e("tr",[e("td",[t._v("loadedClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-lazy-loaded'")]),t._v(" "),e("td",[t._v("懒加载完成的元素的类名")])]),t._v(" "),e("tr",[e("td",[t._v("preloaderClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-lazy-preloader'")]),t._v(" "),e("td",[t._v("延时加载时预加载元素（preloader）的类名")])])])]),t._v(" "),e("h3",{attrs:{id:"lazy-loading-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lazy-loading-方法和属性"}},[t._v("#")]),t._v(" Lazy Loading 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.lazy.load()")]),t._v(" "),e("td",[t._v("加载可视区域内（或前后）的图片。"),e("br"),t._v("swiper在初始化、切换、拖动滚动条时会自动使用这个方法来加载图片。"),e("br"),t._v("但是有时候你可能需要手动运行这个方法，例如你自定义了一个奇异的切换方式")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.lazy.loadInSlide(index)")]),t._v(" "),e("td",[t._v("根据slide的索引加载图片")])])])]),t._v(" "),e("h3",{attrs:{id:"lazy-loading-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#lazy-loading-事件"}},[t._v("#")]),t._v(" Lazy Loading 事件")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("lazyImageLoad")]),t._v(" "),e("td",[t._v("slideEl, imageEl")]),t._v(" "),e("td",[t._v("回调函数，图片延迟加载开始时执行。slide中每有一张图片被延迟加载就执行一次。"),e("br"),t._v("接受延迟加载的slide，延迟加载的img作为参数（可选）")])]),t._v(" "),e("tr",[e("td",[t._v("lazyImageReady")]),t._v(" "),e("td",[t._v("slideEl, imageEl")]),t._v(" "),e("td",[t._v("回调函数，图片延迟加载结束时执行。slide中每有一张图片被延迟加载就执行一次。"),e("br"),t._v("接受延迟加载的slide，延迟加载的img作为参数（可选）")])])])]),t._v(" "),e("h2",{attrs:{id:"_7-fade-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_7-fade-effect"}},[t._v("#")]),t._v(" 7. Fade Effect")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    fadeEffect: {\n        crossFade: true\n    },\n});\n")])])]),e("h3",{attrs:{id:"fade-effect-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#fade-effect-参数"}},[t._v("#")]),t._v(" Fade Effect 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("crossFade")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("fade效果参数。可选参数：crossFade。"),e("br"),t._v("默认：false。关闭淡出。"),e("br"),t._v("过渡时，原slide透明度为1（不淡出），过渡中的slide透明度从0->1（淡入），其他slide透明度0。"),e("br"),t._v("可选值：true。开启淡出。"),e("br"),t._v("过渡时，原slide透明度从1->0（淡出），过渡中的slide透明度从0->1（淡入），其他slide透明度0。"),e("br"),t._v("当你的slide中图片大小不同时可以用到。")])])])]),t._v(" "),e("h2",{attrs:{id:"_8-coverflow-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_8-coverflow-effect"}},[t._v("#")]),t._v(" 8. Coverflow Effect")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    coverflowEffect: {\n        rotate: 30,\n        slideShadows: false,\n    },\n});\n")])])]),e("h3",{attrs:{id:"coverflow-effect-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#coverflow-effect-参数"}},[t._v("#")]),t._v(" Coverflow Effect 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("slideShadows")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("开启slide阴影")])]),t._v(" "),e("tr",[e("td",[t._v("rotate")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("50")]),t._v(" "),e("td",[t._v("slide做3d旋转时Y轴的旋转角度")])]),t._v(" "),e("tr",[e("td",[t._v("stretch")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("每个slide之间的拉伸值，越大slide靠得越紧")])]),t._v(" "),e("tr",[e("td",[t._v("depth")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("100")]),t._v(" "),e("td",[t._v("slide的位置深度。值越大z轴距离越远，看起来越小")])]),t._v(" "),e("tr",[e("td",[t._v("modifier")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("depth和rotate和stretch的倍率，相当于depth"),e("em",[t._v("modifier、rotate")]),t._v("modifier、stretch*modifier，值越大这三个参数的效果越明显")])])])]),t._v(" "),e("h2",{attrs:{id:"_9-flip-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_9-flip-effect"}},[t._v("#")]),t._v(" 9. Flip Effect")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    flipEffect: {\n        rotate: 30,\n        slideShadows: false,\n    },\n});\n")])])]),e("h3",{attrs:{id:"flip-effect-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#flip-effect-参数"}},[t._v("#")]),t._v(" Flip Effect 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("slideShadows")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("slides的阴影")])]),t._v(" "),e("tr",[e("td",[t._v("limitRotation")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("限制最大旋转角度为180度")])])])]),t._v(" "),e("h2",{attrs:{id:"_10-cube-effect"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_10-cube-effect"}},[t._v("#")]),t._v(" 10. Cube Effect")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    cubeEffect: {\n        slideShadows: false,\n    },\n});\n")])])]),e("h3",{attrs:{id:"cube-effect-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cube-effect-参数"}},[t._v("#")]),t._v(" Cube Effect 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("slideShadows")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("开启slide阴影")])]),t._v(" "),e("tr",[e("td",[t._v("shadow")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("开启投影")])]),t._v(" "),e("tr",[e("td",[t._v("shadowOffset")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("20")]),t._v(" "),e("td",[t._v("投影距离,单位px")])]),t._v(" "),e("tr",[e("td",[t._v("shadowScale")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0.94")]),t._v(" "),e("td",[t._v("投影缩放比例")])])])]),t._v(" "),e("h2",{attrs:{id:"_11-thumbs"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_11-thumbs"}},[t._v("#")]),t._v(" 11. Thumbs")]),t._v(" "),e("p",[t._v("设置作为缩略图的swiper对象。有两种方式：\n1.先初始化缩略图Swiper，再初始化banner Swiper")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var thumbsSwiper = new Swiper('.swiper-container-thumbs', {\n    slidesPerView: 5,\n});\n\nvar mySwiper = new Swiper('.swiper-container', {\n    ...\n    thumbs: {\n        swiper: thumbsSwiper\n    }\n});\n")])])]),e("p",[t._v("2.初始化banner Swiper的时候初始化缩略图Swiper")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    ...\n    thumbs: {\n        swiper: {\n            el: '.swiper-container-thumbs',\n            slidesPerView: 5,\n            ...\n        }\n    }\n});\n")])])]),e("h3",{attrs:{id:"thumbs-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thumbs-参数"}},[t._v("#")]),t._v(" Thumbs 参数")]),t._v(" "),e("p",[t._v("thumbs组件专门用于制作带缩略图的swiper，比使用controller组件更为简便")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("swiper")]),t._v(" "),e("td",[t._v("object Swiper")]),t._v(" "),e("td"),t._v(" "),e("td")]),t._v(" "),e("tr",[e("td",[t._v("slideThumbActiveClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-thumb-active'")]),t._v(" "),e("td",[t._v("设置缩略图Swiper的活动块的附加类名。"),e("br"),t._v("banner Swiper切换时，缩略图Swiper的原活动块类名swiper-slide-active不会切换，"),e("br"),t._v("而缩略图Swiper的附加类名swiper-slide-thumb-active会切换")])]),t._v(" "),e("tr",[e("td",[t._v("thumbsContainerClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-container-thumbs'")]),t._v(" "),e("td",[t._v("设置缩略图Swiper的container的附加类名")])])])]),t._v(" "),e("h3",{attrs:{id:"thumbs-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#thumbs-方法和属性"}},[t._v("#")]),t._v(" Thumbs 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.thumbs.swiper")]),t._v(" "),e("td",[t._v("获取缩略图Swiper的实例")])])])]),t._v(" "),e("h2",{attrs:{id:"_12-zoom-缩放"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_12-zoom-缩放"}},[t._v("#")]),t._v(" 12. Zoom (缩放)")]),t._v(" "),e("p",[t._v("zoom: {object|boolean}")]),t._v(" "),e("p",[t._v("开启焦距功能：双击slide会放大/缩小，并且在手机端可双指触摸缩放。可设置缩放选项或设为true使用默认值。")]),t._v(" "),e("p",[t._v("需要在slide中增加类名swiper-zoom-container，结构如下：")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<div class="swiper-slide"> <div class="swiper-zoom-container"> <img src="path/to/image"> </div> </div>\n')])])]),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    zoom: {\n        maxRatio: 5,\n    },\n});\n")])])]),e("h3",{attrs:{id:"zoom-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zoom-参数"}},[t._v("#")]),t._v(" Zoom 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("maxRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("3")]),t._v(" "),e("td",[t._v("最大缩放焦距（放大倍率）。"),e("br"),t._v("如果要在单个slide上设置，可以使用data-swiper-zoom")])]),t._v(" "),e("tr",[e("td",[t._v("minRatio")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("最小缩放焦距（缩小倍率）")])]),t._v(" "),e("tr",[e("td",[t._v("toggle")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("是否允许双击缩放"),e("br"),t._v("设置为false，不允许双击缩放，只允许手机端触摸缩放")])]),t._v(" "),e("tr",[e("td",[t._v("containerClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-zoom-container'")]),t._v(" "),e("td",[t._v("zoom container的类名")])]),t._v(" "),e("tr",[e("td",[t._v("zoomedSlideClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-slide-zoomed'")]),t._v(" "),e("td",[t._v("被缩放的slide的类名")])])])]),t._v(" "),e("h3",{attrs:{id:"zoom-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zoom-方法和属性"}},[t._v("#")]),t._v(" Zoom 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.zoom.enabled")]),t._v(" "),e("td",[t._v("判断zoom是否开启")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.zoom.scale")]),t._v(" "),e("td",[t._v("获取当前缩放的图片的比例")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.zoom.enable()")]),t._v(" "),e("td",[t._v("开启zoom")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.zoom.disable()")]),t._v(" "),e("td",[t._v("禁止zoom模式")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.zoom.in()")]),t._v(" "),e("td",[t._v("zoom模式下，当前的图片放大")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.zoom.out()")]),t._v(" "),e("td",[t._v("zoom模式下，当前的图片缩小")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.zoom.toggle()")]),t._v(" "),e("td",[t._v("zoom模式下，当前的图片放大/缩小")])])])]),t._v(" "),e("h3",{attrs:{id:"zoom-事件"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#zoom-事件"}},[t._v("#")]),t._v(" Zoom 事件")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("事件名称")]),t._v(" "),e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("zoomChange")]),t._v(" "),e("td",[t._v("scale, imageEl, slideEl")]),t._v(" "),e("td",[t._v("当zoom变化时，触发此回调函数，接受scale, imageEl 和slideEl作为参数。"),e("br"),t._v("scale：缩放的倍数"),e("br"),t._v("imageEl：缩放的图片的HTML"),e("br"),t._v("slideEl：缩放的slide的HTML")])])])]),t._v(" "),e("h2",{attrs:{id:"_13-keyboard-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_13-keyboard-control"}},[t._v("#")]),t._v(" 13. Keyboard Control")]),t._v(" "),e("p",[t._v("是否开启键盘控制Swiper切换。设置为true时，能使用键盘的方向键控制slide切换")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    keyboard: {\n        enabled: true,\n        onlyInViewport: false,\n    },\n});\n")])])]),e("h3",{attrs:{id:"keyboard-control-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboard-control-参数"}},[t._v("#")]),t._v(" Keyboard Control 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("enabled")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启后可以使用键盘切换")])]),t._v(" "),e("tr",[e("td",[t._v("onlyInViewport")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("默认仅控制当前窗口内的swiper切换。当swiper离开可视区域则无法切换")])])])]),t._v(" "),e("h3",{attrs:{id:"keyboard-control-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#keyboard-control-方法和属性"}},[t._v("#")]),t._v(" Keyboard Control 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.keyboard.enabled")]),t._v(" "),e("td",[t._v("获取键盘状态")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.keyboard.enable()")]),t._v(" "),e("td",[t._v("开启键盘控制")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.keyboard.disable()")]),t._v(" "),e("td",[t._v("禁止键盘控制")])])])]),t._v(" "),e("h2",{attrs:{id:"_14-mousewheel-control"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_14-mousewheel-control"}},[t._v("#")]),t._v(" 14. Mousewheel Control")]),t._v(" "),e("p",[t._v("开启鼠标滚轮控制Swiper切换。可设置鼠标选项，或true使用默认值")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    mousewheel: {\n        invert: true,\n    },\n});\n")])])]),e("h3",{attrs:{id:"mousewheel-control-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mousewheel-control-参数"}},[t._v("#")]),t._v(" Mousewheel Control 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("forceToAxis")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("当值为true让鼠标滚轮固定于轴向。"),e("br"),t._v("当水平mode时的鼠标滚轮只有水平滚动才会起效，当垂直mode时的鼠标滚轮只有垂直滚动才会起效。"),e("br"),t._v("普通家用鼠标只有垂直方向的滚动")])]),t._v(" "),e("tr",[e("td",[t._v("releaseOnEdges")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("如果开启这个参数，当Swiper处于边缘位置时（第一个或最后一个slide），"),e("br"),t._v("Swiper释放鼠标滚轮事件，鼠标可以控制页面滚动")])]),t._v(" "),e("tr",[e("td",[t._v("invert")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("这个参数会使鼠标滚轮控制方向反转")])]),t._v(" "),e("tr",[e("td",[t._v("sensitivity")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("1")]),t._v(" "),e("td",[t._v("鼠标滚轮的灵敏度，值越大鼠标滚轮滚动时swiper位移越大")])]),t._v(" "),e("tr",[e("td",[t._v("eventsTarged")]),t._v(" "),e("td",[t._v("string / HTMLElement")]),t._v(" "),e("td",[t._v("'container'")]),t._v(" "),e("td",[t._v("鼠标滚轮事件的接收目标(handle)，可以是css选择器或者HTML元素")])])])]),t._v(" "),e("h3",{attrs:{id:"mousewheel-control-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#mousewheel-control-方法和属性"}},[t._v("#")]),t._v(" Mousewheel Control 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.mousewheel.enabled")]),t._v(" "),e("td",[t._v("获取鼠标控制状态，true/false。")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.mousewheel.enable()")]),t._v(" "),e("td",[t._v("开启鼠标滑轮控制")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.mousewheel.disable()")]),t._v(" "),e("td",[t._v("禁止鼠标滑轮控制")])])])]),t._v(" "),e("h2",{attrs:{id:"_15-virtual-slides-虚拟slide"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_15-virtual-slides-虚拟slide"}},[t._v("#")]),t._v(" 15. Virtual Slides (虚拟Slide)")]),t._v(" "),e("p",[t._v("开启虚拟Slide功能，可设置选项或设置为true则使用默认值。")]),t._v(" "),e("p",[t._v("虚拟Slide会在Dom结构中保持尽量少的Slide，只渲染当前可见的slide和前后的slide，而隐藏其他不可见的Slide，每次切换时就渲染新的Slide。当你的Slide很多的时候，尤其是Slide中有复杂的Dom树结构时，性能会有很大的提升")]),t._v(" "),e("p",[t._v("virtual: {object|boolean}")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    virtual: {\n        slides: ['Slide 1', 'Slide 2', 'Slide 3', 'Slide 4', 'Slide 5'],\n    },\n});\n")])])]),e("h3",{attrs:{id:"virtual-slides-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#virtual-slides-参数"}},[t._v("#")]),t._v(" Virtual Slides 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("slides")]),t._v(" "),e("td",[t._v("array")]),t._v(" "),e("td",[t._v("[]")]),t._v(" "),e("td",[t._v("需要添加的虚拟slide的内容")])]),t._v(" "),e("tr",[e("td",[t._v("cache")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("开启虚拟Slide的DOM缓存（默认值）。"),e("br"),t._v("虚拟的Slide被渲染后，会存入到缓存中，也可以从缓存中重新获得该Slide")])]),t._v(" "),e("tr",[e("td",[t._v("renderSlide")]),t._v(" "),e("td",[t._v("function(slide, index)")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("此函数设置以何种形式渲染虚拟Slide，接受当前渲染Slide的内容和Index作为参数。"),e("br"),t._v('必须返回一个slide的HTML结构。即必须包含<div class="swiper-slide"></div>')])]),t._v(" "),e("tr",[e("td",[t._v("renderExternal")]),t._v(" "),e("td",[t._v("function(data)")]),t._v(" "),e("td",[t._v("null")]),t._v(" "),e("td",[t._v("外部渲染函数（比如你使用了其他库，vue或react等），这个函数接受以下四个参数"),e("br"),t._v("offset Slides左/上的偏移量"),e("br"),t._v("from - 第一个需要渲染的Slide的索引"),e("br"),t._v("to - 最后一个需要渲染的Slide的索引"),e("br"),t._v("slides - 被渲染的Slide数组")])]),t._v(" "),e("tr",[e("td",[t._v("addSlidesBefore")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("一般情况下，virtual swiper只会提前渲染可见slide前后一个（组）slide，"),e("br"),t._v("如果你想提前渲染前面多个slide，可以设置这个选项")])]),t._v(" "),e("tr",[e("td",[t._v("addSlidesAfter")]),t._v(" "),e("td",[t._v("number")]),t._v(" "),e("td",[t._v("0")]),t._v(" "),e("td",[t._v("一般情况下，virtual swiper只会提前渲染可见slide前后一个（组）slide，"),e("br"),t._v("如果你想提前渲染后面多个slide，可以设置这个选项")])])])]),t._v(" "),e("h3",{attrs:{id:"virtual-slides-方法和属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#virtual-slides-方法和属性"}},[t._v("#")]),t._v(" Virtual Slides 方法和属性")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("方法或属性")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("mySwiper.virtual.cache")]),t._v(" "),e("td",[t._v("获取或设置缓存的（已经渲染的）Slide的HTML")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.from")]),t._v(" "),e("td",[t._v("获取正在渲染的第一个虚拟Slide的序号")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.to")]),t._v(" "),e("td",[t._v("获取正在渲染的最后一个虚拟Slide的序号")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.slides")]),t._v(" "),e("td",[t._v("获取全部的虚拟slide数组无论其是否被渲染了。"),e("br"),t._v("或设置虚拟slide。")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.appendSlide(slides)")]),t._v(" "),e("td",[t._v("在全部虚拟Slide的后面插入Slide或Slide的数组")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.prependSlide(slides)")]),t._v(" "),e("td",[t._v("在虚拟Slide的前面添加新的Slide或Slide的数组")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.removeSlide(slideIndexes)")]),t._v(" "),e("td",[t._v("移除索引为index的虚拟slide。例如："),e("br"),t._v("mySwiper.virtual.removeSlide(0); //移除第一个"),e("br"),t._v("mySwiper.virtual.removeSlide([0, 1]); //移除第一个和第二个")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.removeAllSlides()")]),t._v(" "),e("td",[t._v("移除所有虚拟slides")])]),t._v(" "),e("tr",[e("td",[t._v("mySwiper.virtual.update()")]),t._v(" "),e("td",[t._v("更新虚拟Slide的状态")])])])]),t._v(" "),e("h3",{attrs:{id:"renderexternal-例子"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#renderexternal-例子"}},[t._v("#")]),t._v(" renderExternal 例子")]),t._v(" "),e("p",[t._v("With Vue.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('<template>\n    \x3c!-- ... --\x3e\n    <div class="swiper-container">\n        <div class="swiper-wrapper">\n            \x3c!-- It is important to set "left" style prop on every slide --\x3e\n            <div class="swiper-slide"\n                v-for="(slide, index) in virtualData.slides"\n                :key="index"\n                :style="{left: `${virtualData.offset}px`}"\n            >{{slide}}</div>\n        </div>\n    </div>\n    \x3c!-- ... --\x3e\n</template>\n<script>\n    import Swiper from \'swiper/dist/js/swiper.esm.bundle\';\n\n    export default {\n        data() {\n            return {\n                // dummy slides data\n                slides: (function () {\n                    var slides = [];\n                    for (var i = 0; i < 600; i += 1) {\n                        slides.push(\'Slide \' + (i + 1));\n                    }\n                    return slides;\n                }()),\n                // virtual data\n                virtualData: {\n                    slides: [],\n                },\n            }\n        },\n        mounted() {\n            const self = this;\n            const swiper = new Swiper(\'.swiper-container\', {\n                // ...\n                virtual: {\n                    slides: self.slides,\n                    renderExternal(data) {\n                        // assign virtual slides data\n                        self.virtualData = data;\n                    },\n                },\n            });\n        },\n    };\n<\/script>\n')])])]),e("p",[t._v("With React.js")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("import React from 'react';\nimport Swiper from 'swiper/dist/js/swiper.esm.bundle';\n\nexport default class extends React.Component {\n    constructor() {\n        this.state = {\n            // dummy slides data\n            slides: (function () {\n                var slides = [];\n                for (var i = 0; i < 600; i += 1) {\n                    slides.push('Slide ' + (i + 1));\n                }\n                return slides;\n            }()),\n            // virtual data\n            virtualData: {\n                slides: [],\n            },\n        }\n    }\n    componentDidMount() {\n        const self = this;\n        const swiper = new Swiper('.swiper-container', {\n            // ...\n            virtual: {\n                slides: self.state.slides,\n                renderExternal(data) {\n                    // assign virtual slides data\n                    self.setState({\n                        virtualData: data,\n                    });\n                }\n            },\n        });\n    }\n    render() {\n        {/* ... */}\n        <div className=\"swiper-container\">\n            <div className=\"swiper-wrapper\">\n            {/* It is important to set \"left\" style prop on every slide */}\n            {this.state.virtualData.slides.map((slide, index) => (\n                <div className=\"swiper-slide\"\n                    key={index}\n                    style={{left: `${virtualData.offset}px`}}\n                >{slide}</div>\n            ))}\n            </div>\n        </div>\n        {/* ... */}\n    }\n}\n")])])]),e("h2",{attrs:{id:"_16-hash-navigation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_16-hash-navigation"}},[t._v("#")]),t._v(" 16. Hash Navigation")]),t._v(" "),e("p",[t._v("设置散列导航选项，或true使用默认值。为每个slide增加散列导航（有点像锚链接）。\n还需要在每个slide处增加data-hash属性。\n这样当你的swiper切换时你的页面url就会加上这个属性的值了，你也可以通过进入页面时修改页面url让swiper在初始化时切换到指定的slide。")]),t._v(" "),e("p",[t._v("你可以直接跳转到指定的slide。比如这样：直接跳到第三个slide。")]),t._v(" "),e("p",[t._v("如果需要浏览器的前进后退按钮配合控制，需要加上watchState")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var swiper = new Swiper('.swiper-container', {\n    //enable hash navigation\n    hashNavigation: true\n})\n")])])]),e("h3",{attrs:{id:"hash-navigation-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#hash-navigation-参数"}},[t._v("#")]),t._v(" Hash Navigation 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("watchState")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("开启后观察浏览器窗口的的hashchange状态变化。"),e("br"),t._v("可通过浏览器历史记录（页面前进后退按钮）或者URL的锚链接改变控制slide切换")])]),t._v(" "),e("tr",[e("td",[t._v("replaceState")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("使用replaceState（window.history.replaceState）代替hashnav的hash（document.location.hash）")])])])]),t._v(" "),e("h2",{attrs:{id:"_17-history-navigation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_17-history-navigation"}},[t._v("#")]),t._v(" 17. History Navigation")]),t._v(" "),e("p",[t._v('设置为true开启history导航，或者自定义history导航选项。\n在slide切换时可无刷新更换URL和浏览器的history.state(pushState)。这样每个slide都会拥有一个自己的URL。\n使用history还必需在slide上增加一个属性data-history，例<div class="swiper-slide" data-history="slide1"></div>\n开启history会取消hashnav')]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    hashNavigation: {\n        replaceState: true,\n    },\n});\n")])])]),e("h3",{attrs:{id:"history-navigation-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#history-navigation-参数"}},[t._v("#")]),t._v(" History Navigation 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("replaceState")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("使用history.replaceState方法替换history.pushState方法")])]),t._v(" "),e("tr",[e("td",[t._v("key")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'slides'")]),t._v(" "),e("td",[t._v("URL中的接续词")])])])]),t._v(" "),e("h2",{attrs:{id:"_18-controller-双向控制"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_18-controller-双向控制"}},[t._v("#")]),t._v(" 18. Controller (双向控制)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    controller: {\n        inverse: true,\n    },\n});\n")])])]),e("h3",{attrs:{id:"controller-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#controller-参数"}},[t._v("#")]),t._v(" Controller 参数")]),t._v(" "),e("p",[t._v("设置双向控制的参数，或者true使用默认设置"),e("br"),t._v("还需要设置control为swiper实例，控制该swiper，而不是被该swiper控制")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("control")]),t._v(" "),e("td",[t._v("[Swiper Instance]")]),t._v(" "),e("td",[t._v("undefined")]),t._v(" "),e("td",[t._v("设置为另外一个Swiper实例开始控制该Swiper")])]),t._v(" "),e("tr",[e("td",[t._v("inverse")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("false")]),t._v(" "),e("td",[t._v("设置为true时控制方向倒转")])]),t._v(" "),e("tr",[e("td",[t._v("by")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'slide'")]),t._v(" "),e("td",[t._v("设定Swiper相互控制时的控制方式。当两个swiper的slide数量不一致时可用。"),e("br"),t._v("默认为'slide'，自身切换一个slide时，被控制方也切换一个slide。"),e("br"),t._v("可选：'container'，按自身slide在container中的位置比例进行控制。"),e("br"),t._v("例：有4个slide的swiper1控制有7个slide的swiper2，"),e("br"),t._v("设定'slide', swiper1的1, 2, 3, 4对应控制的swiper2为1, 2, 3, 7。"),e("br"),t._v("设定by: 'container'，swiper1的1, 2, 3, 4对应控制的swiper2为1, 3, 5, 7")])])])]),t._v(" "),e("h2",{attrs:{id:"_19-accessibility-a11y-无障碍阅读"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#_19-accessibility-a11y-无障碍阅读"}},[t._v("#")]),t._v(" 19. Accessibility(a11y) (无障碍阅读)")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v("var mySwiper = new Swiper('.swiper-container', {\n    a11y: {\n        prevSlideMessage: 'Previous slide',\n        nextSlideMessage: 'Next slide',\n    },\n});\n")])])]),e("h3",{attrs:{id:"accessibility-参数"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#accessibility-参数"}},[t._v("#")]),t._v(" Accessibility 参数")]),t._v(" "),e("table",[e("thead",[e("tr",[e("th",[t._v("参数")]),t._v(" "),e("th",[t._v("类型")]),t._v(" "),e("th",[t._v("默认")]),t._v(" "),e("th",[t._v("描述")])])]),t._v(" "),e("tbody",[e("tr",[e("td",[t._v("enabled")]),t._v(" "),e("td",[t._v("boolean")]),t._v(" "),e("td",[t._v("true")]),t._v(" "),e("td",[t._v("辅助，无障碍阅读。开启本参数为屏幕阅读器添加语音提示等信息，方便视觉障碍者。基于ARIA标准")])]),t._v(" "),e("tr",[e("td",[t._v("prevSlideMessage")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'Previous slide'")]),t._v(" "),e("td",[t._v("在屏幕阅读器为上一页按钮添加信息")])]),t._v(" "),e("tr",[e("td",[t._v("nextSlideMessage")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'Next slide'")]),t._v(" "),e("td",[t._v("在屏幕阅读器为下一页按钮添加信息")])]),t._v(" "),e("tr",[e("td",[t._v("firstSlideMessage")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'This is the first slide'")]),t._v(" "),e("td",[t._v("在屏幕阅读器当处于第一个slide为上一页按钮添加信息")])]),t._v(" "),e("tr",[e("td",[t._v("lastSlideMessage")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'This is the last slide'")]),t._v(" "),e("td",[t._v("在屏幕阅读器当处于最后一个slide为下一页按钮添加信息")])]),t._v(" "),e("tr",[e("td",[t._v("paginationBulletMessage")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'Go to slide "+t._s(t.index)+"'")]),t._v(" "),e("td",[t._v("在屏幕阅读器为分页器小点添加信息")])]),t._v(" "),e("tr",[e("td",[t._v("notificationClass")]),t._v(" "),e("td",[t._v("string")]),t._v(" "),e("td",[t._v("'swiper-notification'")]),t._v(" "),e("td",[t._v("A11y公告部分的类名")])])])])])}),[],!1,null,null,null);v.default=r.exports}}]);